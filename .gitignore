#!/bin/bash

# 1️⃣ Backup currently tracked files
BACKUP_DIR=~/appyra_repo_backup
echo "Backing up tracked files to $BACKUP_DIR ..."
mkdir -p "$BACKUP_DIR"
git ls-files -z | xargs -0 -I {} cp --parents {} "$BACKUP_DIR/"

# 2️⃣ Replace .gitignore with future-proof version
echo "Writing new future-proof .gitignore ..."
cat > .gitignore <<EOL
# =====================
# Node / JavaScript / Frontend
# =====================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
package-lock.json
yarn.lock

# Build outputs
.next/
dist/
build/
out/
*.map

# Environment / secret configs
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local
*.key
*.pem
*.crt
*.p12
*.jks

# Logs
logs/
*.log
pids/
*.pid
*.seed
*.pid.lock

# OS / system
.DS_Store
Thumbs.db
*.swp
*.swo
*.tmp
*.temp

# IDE / editor
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# =====================
# Python / AI / ML
# =====================
__pycache__/
*.py[cod]
*.pyo
*.pyd
*.ipynb_checkpoints
*.h5
*.pt
*.ckpt
*.model
*.onnx
*.tflite
*.pb
*.sav
*.joblib
*.npy
*.npz
*.data

# Virtual environments
venv/
.venv/
*.egg-info/

# Database / data
*.sqlite
*.db
*.db-journal
*.sql
*.sqlite3
*.csv
*.tsv
*.jsonl

# Coverage / tests
coverage/
*.lcov
.jest/
.nyc_output/
__tests__/

# Docker / containers
docker-compose.override.yml
.env.docker
Dockerfile.dev
*.dockerignore

# Misc / backups
*.bak
*.backup
*.old

# Large files (AI models, datasets, assets)
*.zip
*.tar.gz
*.rar
*.7z
*.mp4
*.mov
*.avi
*.mkv
*.bin
*.dat

# Optional: prevent accidental commit of huge files
*.ckpt.*
*.h5.*
*.pt.*
*.onnx.*
*.tflite.*
EOL

# 3️⃣ Remove cached files from Git
echo "Removing cached files ..."
git rm -r --cached .

# 4️⃣ Re-add all files respecting new .gitignore
git add .

# 5️⃣ Commit changes
git commit -m "Replace old .gitignore with cleaned future-proof version"

# 6️⃣ Push to remote
git push origin main

echo "✅ Repo cleaned and updated with future-proof .gitignore. Backup is at $BACKUP_DIR"
chmod +x update_gitignore.sh
./update_gitignore.sh
